#############################################################################
# Makefile for building zbench
# Generated by tmake at 13:50, 2012/08/16
#     Project: zbench
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	$(TARGET_CROSS)gcc
CXX	=	$(TARGET_CROSS)g++
CFLAGS	=	-pipe $(TARGET_CFLAGS) -Wall -W -O2 -DNO_DEBUG
CXXFLAGS=	-pipe $(TARGET_CFLAGS) -DQWS -fno-exceptions -fno-rtti -Wall -W -O2 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include -I$(QPEDIR)/include
LINK	=	$(TARGET_CROSS)g++
LFLAGS	=	$(TARGET_LDFLAGS)
LIBS	=	$(SUBLIBS) -L$(QPEDIR)/lib -L$(QTDIR)/lib -lm $(TARGET_LIBS) -lqpe -lqte
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	zbench.h
SOURCES =	fft.c \
		integer.c \
		main.cpp \
		zbench.cpp
OBJECTS =	fft.o \
		integer.o \
		main.o \
		zbench.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_zbench.cpp
OBJMOC	=	moc_zbench.o
DIST	=	
TARGET	=	zbench
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: zbench.pro
	tmake zbench.pro -o Makefile

dist:
	$(TAR) zbench.tar zbench.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) zbench.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

fft.o: fft.c

integer.o: integer.c

main.o: main.cpp \
		zbench.h

zbench.o: zbench.cpp \
		zbench.h

moc_zbench.o: moc_zbench.cpp \
		zbench.h

moc_zbench.cpp: zbench.h
	$(MOC) zbench.h -o moc_zbench.cpp

